# REINVENT4 TOML input example for transfer learning
#
# Focus a given model towards a set of input SMILES.  This can also be used to
# start from scratch from and an untrained prior.


run_type = "transfer_learning"
device = "cuda:0"  # set torch device e.g. "cpu"
tb_logdir = "tb_TL"  # name of the TensorBoard logging directory
json_out_config = "json_transfer_learning.json"  # write this TOML to JSON

[parameters]

num_epochs = 3  # number of steps to run
save_every_n_epochs = 3  # save checkpoint model file very N steps
batch_size = 50
num_refs = 100  # number of reference molecules randomly chosen for similarity
                # set this to zero for large datasets (>200 molecules)!
sample_batch_size = 100  # number of sampled molecules to compute sample loss
tb_isim = true  # track iSIM similarity in TensorBoard
# Uncomment one of the comment blocks below.  Each generator needs a model
# file and possibly a SMILES file with seed structures.

## Reinvent
#input_model_file = "priors/reinvent.prior"
#smiles_file = "TL_reinvent_100.smi"  # read 1st column
#output_model_file = "TL_reinvent.model"
#validation_smiles_file = "TL_reinvent_100.smi"  

## Mol2Mol
input_model_file = "priors/mol2mol_scaffold_generic.prior"
smiles_file = "configs/mol2mol.smi"  # read 1st column (Change file names)
output_model_file = "TL_Mol2Mol.model"
validation_smiles_file = "configs/mol2mol_valid.smi"  # read 1st column (Change file names)

# Define the type of similarity and its parameters
pairs.type = "tanimoto"
pairs.upper_threshold = 1.0
pairs.lower_threshold = 0.7
pairs.min_cardinality = 1
pairs.max_cardinality = 199

### It may not make much sense to use TL for Lib/Linkinvent because
### both methods use constraints which may leave only a small portion of
### the molecule to be optimizable
## LibInvent
#input_model_file = "priors/libinvent.prior"
#smiles_file = "TL_libinvent_100.smi"  # read first 2 columns: scaffold, R-groups
#validation_smiles_file = "TL_libinvent_100.smi"  # read first 2 columns: scaffold, R-groups
#output_model_file = "TL_libinvent.model"
#
## LinkInvent
#input_model_file = "priors/linkinvent.prior"
#smiles_file = "TL_linkinvent_100.smi"  # read first 2 columns: warheads, linker
#output_model_file = "TL_linkinvent.model"
#validation_smiles_file = "TL_linkinvent_100.smi"  # read first 2 columns: warheads, linker
